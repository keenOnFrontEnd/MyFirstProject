{"version":3,"sources":["hoc/withAuthRedirect.js","src2/Dialogs/ActDialog/ActDialog.module.css","src2/Dialogs/Dialogs.module.css","src2/Dialogs/DialogList/DialogList.module.css","src2/Dialogs/DialogList/DialogItem/DIalogItem.module.css","src2/Dialogs/DialogList/DialogItem/DialogItem.jsx","src2/Dialogs/DialogList/DialogList.jsx","src2/Dialogs/ActDialog/NewMassege.jsx","src2/Dialogs/ActDialog/ActDialogForm.jsx","src2/Dialogs/ActDialog/ActDialog.jsx","src2/Dialogs/ActDialog/ActDialogContainer.jsx","src2/Dialogs/Dialogs.jsx","src2/Dialogs/DialogContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","id","name","path","className","s","dialog","DialogListContainer","dialogs","dialogsPage","users","usersPage","friendslist","dialogsElements","map","d","key","main_wrapper","Messagealfa","text","time","new","newText","ActDialog","handleSubmit","messages","onSubmit","form_wrapper","Field","area","component","Textarea","field","custom_button","button","icon","faPaperPlane","ActDialogReduxForm","reduxForm","form","SendMessage","messagesData","user","Text","createRef","m","message","dialog_info_wrapper","src","dialog_messages_wrapper","dialog_form_wrapper","values","newMessageBody","ActDialogClass","actDialogID","updateActDialogAC","ActDialogContainer","Dialogs","main_dialogs_wrapper","compose"],"mappings":"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","file":"static/js/5.8b4be532.chunk.js","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n  })\r\nexport const withAuthRedirect = (Component) => {\r\n     class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to={\"/login\"}/>\r\n\r\n            return <Component {...this.props} />\r\n\r\n        }\r\n    \r\n    }   \r\n    let ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n      \r\n\r\n    return ConnectAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_wrapper\":\"ActDialog_main_wrapper__1mO9o\",\"dialog_info_wrapper\":\"ActDialog_dialog_info_wrapper__1H5kh\",\"dialog_messages_wrapper\":\"ActDialog_dialog_messages_wrapper__2AkMV\",\"dialog_form_wrapper\":\"ActDialog_dialog_form_wrapper__29KCh\",\"custom_button\":\"ActDialog_custom_button__1JNPM\",\"form_wrapper\":\"ActDialog_form_wrapper__2JIIS\",\"field\":\"ActDialog_field__3_QO7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_dialogs_wrapper\":\"Dialogs_main_dialogs_wrapper__3KYLv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_wrapper\":\"DialogList_main_wrapper__ymztQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DIalogItem_dialog__3qx1I\"};","import React from 'react';\r\nimport s from './DIalogItem.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nconst DialogItem = ({id,name}) => {\r\n    let path = '/dialogs/' + id;\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={path} >{name}</NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DialogItem ;","import React from 'react';\r\nimport s from './DialogList.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst DialogList = ({users}) => {\r\n    let dialogsElements = users.map( d => <DialogItem name={d.name} id={d.id} key={d.id} /> );\r\n    return (\r\n        <div className={s.main_wrapper}>\r\n        <div>\r\n        <div>You don't have any actual dialogs </div>\r\n            {dialogsElements }\r\n        </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        isAuth: state.auth.isAuth,\r\n        users: state.usersPage.friendslist\r\n    }\r\n};\r\n\r\nconst DialogListContainer = connect(mapStateToProps)(DialogList);\r\n\r\n\r\n\r\nexport default DialogListContainer;\r\n","import React from 'react';\r\nimport s from './ActDialog.module.css';\r\n\r\nconst Messagealfa = ({text, time}) => {\r\n    return (<div className={s.new}>\r\n        <div className={s.newText}>{text}</div>\r\n    <div className={s.time}>{time}</div>\r\n\r\n    </div>)\r\n}\r\n\r\nexport default Messagealfa;","import React from 'react';\r\nimport s from './ActDialog.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../../../files/common/formsControls/FormsControls';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBomb, faPaperPlane } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nclass ActDialog extends React.Component {\r\n\r\n    render() {\r\n        const { handleSubmit, messages } = this.props;\r\n        return (\r\n            <form onSubmit={handleSubmit}>\r\n                <div className={s.form_wrapper}>\r\n                    <Field className={s.area}\r\n                        name={'newMessageBody'} component={Textarea} className={s.field} />\r\n                </div>\r\n                <label className={s.custom_button}>\r\n                    <button className={s.button}>SEND</button>\r\n                    <FontAwesomeIcon icon={faPaperPlane} />\r\n                </label>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport const ActDialogReduxForm = reduxForm({ form: 'dialogsAddMessageForm' })(ActDialog)\r\n\r\n","import React from 'react';\r\nimport Messagealfa from './NewMassege';\r\nimport { ActDialogReduxForm } from './ActDialogForm';\r\nimport s from './ActDialog.module.css';\r\nimport userEvent from '@testing-library/user-event';\r\nimport userLogo from './../../../files/photos/user_icon.jpg';\r\n\r\n\r\n\r\nconst ActDialog = ({ SendMessage, messagesData,user }) => {\r\n\r\n  let AddMessage = (values) => {\r\n    SendMessage(values.newMessageBody)\r\n  }\r\n  Text = React.createRef();\r\n\r\n  let messages = messagesData.map(m => <Messagealfa text={m.message} time={m.time} id={m.id} />);\r\n  return (\r\n\r\n    <div className={s.main_wrapper}>\r\n      <div className={s.dialog_info_wrapper}>\r\n        <section> \r\n          <img src={null}/>\r\n          <div>{null}</div>\r\n        </section>\r\n      </div>\r\n      <div className={s.dialog_messages_wrapper}>{messages}</div>\r\n      <div className={s.dialog_form_wrapper}><ActDialogReduxForm messages={messages} onSubmit={AddMessage} /></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ActDialog;\r\n","import React from 'react';\r\nimport { SendMessage, updateActDialogAC } from '../../../redux/dialogs-reducer';\r\nimport ActDialog from './ActDialog';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass ActDialogClass extends React.Component {\r\n\r\n    render() {\r\n        const {messagesData, actDialogID, SendMessage, updateActDialogAC, users} = this.props;\r\n        return <>\r\n        <ActDialog\r\n        messagesData = {messagesData}\r\n        actDialogID = {actDialogID}\r\n        SendMessage = {SendMessage}\r\n        updateActDialogAC = {updateActDialogAC}\r\n        users = {users}\r\n        />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesData: state.dialogsPage.messagesData,\r\n        actDialogID: state.dialogsPage.actDialogID,\r\n        users: state.usersPage.friendslist\r\n    }\r\n}\r\nconst ActDialogContainer = connect(mapStateToProps,{SendMessage, updateActDialogAC})(ActDialogClass);\r\n\r\nexport default ActDialogContainer;\r\n","import React from 'react' ;\r\nimport s from './Dialogs.module.css';\r\nimport DialogListContainer from './DialogList/DialogList';\r\nimport ActDialogContainer from './ActDialog/ActDialogContainer';\r\n\r\n  \r\nconst Dialogs = (props) => {\r\n   \r\n    \r\n    \r\n    return(\r\n        <div className={s.main_dialogs_wrapper}>\r\n         <div><DialogListContainer /></div>\r\n          <div><ActDialogContainer /></div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Dialogs;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport Dialogs from './Dialogs';\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth : state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n     connect(mapStateToProps),\r\n     withAuthRedirect\r\n )(Dialogs)\r\n"],"sourceRoot":""}